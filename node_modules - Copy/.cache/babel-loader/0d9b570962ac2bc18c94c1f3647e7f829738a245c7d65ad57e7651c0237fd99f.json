{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\react-admin\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\nimport { mockBarData as data } from \"../data/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  isDashboard = false\n}) => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n    indexBy: \"country\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'country',\n      legendPosition: 'middle',\n      legendOffset: 32,\n      truncateTickAt: 0\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'food',\n      legendPosition: 'middle',\n      legendOffset: -40,\n      truncateTickAt: 0\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    role: \"application\",\n    ariaLabel: \"Nivo bar chart demo\",\n    barAriaLabel: e => e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["useTheme","ResponsiveBar","tokens","mockBarData","data","jsxDEV","_jsxDEV","BarChart","isDashboard","_s","theme","colors","palette","mode","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","truncateTickAt","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","ariaLabel","barAriaLabel","e","formattedValue","indexValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PROJECTS/react-admin/src/components/BarChart.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockBarData as data } from \"../data/mockData\";\r\n\r\nconst BarChart = ({ isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <ResponsiveBar\r\n    data={data}\r\n    keys={[\r\n        'hot dog',\r\n        'burger',\r\n        'sandwich',\r\n        'kebab',\r\n        'fries',\r\n        'donut'\r\n    ]}\r\n    indexBy=\"country\"\r\n    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n    padding={0.3}\r\n    valueScale={{ type: 'linear' }}\r\n    indexScale={{ type: 'band', round: true }}\r\n    colors={{ scheme: 'nivo' }}\r\n    defs={[\r\n        {\r\n            id: 'dots',\r\n            type: 'patternDots',\r\n            background: 'inherit',\r\n            color: '#38bcb2',\r\n            size: 4,\r\n            padding: 1,\r\n            stagger: true\r\n        },\r\n        {\r\n            id: 'lines',\r\n            type: 'patternLines',\r\n            background: 'inherit',\r\n            color: '#eed312',\r\n            rotation: -45,\r\n            lineWidth: 6,\r\n            spacing: 10\r\n        }\r\n    ]}\r\n    fill={[\r\n        {\r\n            match: {\r\n                id: 'fries'\r\n            },\r\n            id: 'dots'\r\n        },\r\n        {\r\n            match: {\r\n                id: 'sandwich'\r\n            },\r\n            id: 'lines'\r\n        }\r\n    ]}\r\n    borderColor={{\r\n        from: 'color',\r\n        modifiers: [\r\n            [\r\n                'darker',\r\n                1.6\r\n            ]\r\n        ]\r\n    }}\r\n    axisTop={null}\r\n    axisRight={null}\r\n    axisBottom={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: 'country',\r\n        legendPosition: 'middle',\r\n        legendOffset: 32,\r\n        truncateTickAt: 0\r\n    }}\r\n    axisLeft={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: 'food',\r\n        legendPosition: 'middle',\r\n        legendOffset: -40,\r\n        truncateTickAt: 0\r\n    }}\r\n    labelSkipWidth={12}\r\n    labelSkipHeight={12}\r\n    labelTextColor={{\r\n        from: 'color',\r\n        modifiers: [\r\n            [\r\n                'darker',\r\n                1.6\r\n            ]\r\n        ]\r\n    }}\r\n    legends={[\r\n        {\r\n            dataFrom: 'keys',\r\n            anchor: 'bottom-right',\r\n            direction: 'column',\r\n            justify: false,\r\n            translateX: 120,\r\n            translateY: 0,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: 'left-to-right',\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n                {\r\n                    on: 'hover',\r\n                    style: {\r\n                        itemOpacity: 1\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]}\r\n    role=\"application\"\r\n    ariaLabel=\"Nivo bar chart demo\"\r\n    barAriaLabel={e=>e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}\r\n/>\r\n)\r\n}\r\nexport default BarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}