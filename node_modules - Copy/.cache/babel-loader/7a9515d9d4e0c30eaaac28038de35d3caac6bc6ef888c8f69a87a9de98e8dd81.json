{"ast":null,"code":"import { memo as e, useMemo as i, useId as o, useState as r, useCallback as n, createElement as t, Fragment as a, forwardRef as s, useRef as l, useEffect as u } from \"react\";\nimport { useTheme as d, lineCurvePropType as c, blendModePropType as h, motionPropTypes as f, defsPropTypes as p, curveFromProp as v, useValueFormatter as y, useMotionConfig as b, useAnimatedPath as m, getLabelGenerator as g, DotsItem as x, withContainer as R, useDimensions as T, CartesianMarkers as q, bindDefs as M, SvgWrapper as O, ResponsiveWrapper as S, getRelativeCursor as C, isCursorInRect as w } from \"@nivo/core\";\nimport { ordinalColorsPropType as k, useOrdinalColorScale as B, useInheritedColor as E } from \"@nivo/colors\";\nimport { axisPropType as L, Grid as W, Axes as G, renderGridLinesToCanvas as P, renderAxesToCanvas as j } from \"@nivo/axes\";\nimport { LegendPropShape as F, BoxLegendSvg as V, renderLegendToCanvas as Y } from \"@nivo/legends\";\nimport { BasicTooltip as D, TableTooltip as X, Chip as A, useTooltip as I, Crosshair as z } from \"@nivo/tooltip\";\nimport { line as H, area as J } from \"d3-shape\";\nimport { computeXYScalesForSeries as K } from \"@nivo/scales\";\nimport N from \"prop-types\";\nimport { jsx as Q, jsxs as U } from \"react/jsx-runtime\";\nimport { useSpring as Z, animated as $ } from \"@react-spring/web\";\nimport { Mesh as _, useVoronoiMesh as ee, renderVoronoiToCanvas as ie, renderVoronoiCellToCanvas as oe } from \"@nivo/voronoi\";\nfunction re() {\n  return re = Object.assign ? Object.assign.bind() : function (e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var o = arguments[i];\n      for (var r in o) Object.prototype.hasOwnProperty.call(o, r) && (e[r] = o[r]);\n    }\n    return e;\n  }, re.apply(this, arguments);\n}\nvar ne = function (e) {\n  var i = e.point;\n  return Q(D, {\n    id: U(\"span\", {\n      children: [\"x: \", Q(\"strong\", {\n        children: i.data.xFormatted\n      }), \", y:\", \" \", Q(\"strong\", {\n        children: i.data.yFormatted\n      })]\n    }),\n    enableChip: !0,\n    color: i.serieColor\n  });\n};\nne.propTypes = {\n  point: N.object.isRequired\n};\nvar te = e(ne),\n  ae = function (e) {\n    var i = e.slice,\n      o = e.axis,\n      r = d(),\n      n = \"x\" === o ? \"y\" : \"x\";\n    return Q(X, {\n      rows: i.points.map(function (e) {\n        return [Q(A, {\n          color: e.serieColor,\n          style: r.tooltip.chip\n        }, \"chip\"), e.serieId, Q(\"span\", {\n          style: r.tooltip.tableCellValue,\n          children: e.data[n + \"Formatted\"]\n        }, \"value\")];\n      })\n    });\n  };\nae.propTypes = {\n  slice: N.object.isRequired,\n  axis: N.oneOf([\"x\", \"y\"]).isRequired\n};\nvar se = e(ae),\n  le = {\n    data: N.arrayOf(N.shape({\n      id: N.oneOfType([N.string, N.number]).isRequired,\n      data: N.arrayOf(N.shape({\n        x: N.oneOfType([N.number, N.string, N.instanceOf(Date)]),\n        y: N.oneOfType([N.number, N.string, N.instanceOf(Date)])\n      })).isRequired\n    })).isRequired,\n    xScale: N.object.isRequired,\n    xFormat: N.oneOfType([N.func, N.string]),\n    yScale: N.object.isRequired,\n    yFormat: N.oneOfType([N.func, N.string]),\n    layers: N.arrayOf(N.oneOfType([N.oneOf([\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"slices\", \"points\", \"mesh\", \"legends\"]), N.func])).isRequired,\n    curve: c.isRequired,\n    axisTop: L,\n    axisRight: L,\n    axisBottom: L,\n    axisLeft: L,\n    enableGridX: N.bool.isRequired,\n    enableGridY: N.bool.isRequired,\n    gridXValues: N.oneOfType([N.number, N.arrayOf(N.oneOfType([N.number, N.string, N.instanceOf(Date)]))]),\n    gridYValues: N.oneOfType([N.number, N.arrayOf(N.oneOfType([N.number, N.string, N.instanceOf(Date)]))]),\n    enablePoints: N.bool.isRequired,\n    pointSymbol: N.func,\n    pointSize: N.number.isRequired,\n    pointColor: N.any.isRequired,\n    pointBorderWidth: N.number.isRequired,\n    pointBorderColor: N.any.isRequired,\n    enablePointLabel: N.bool.isRequired,\n    pointLabel: N.oneOfType([N.string, N.func]).isRequired,\n    markers: N.arrayOf(N.shape({\n      axis: N.oneOf([\"x\", \"y\"]).isRequired,\n      value: N.oneOfType([N.number, N.string, N.instanceOf(Date)]).isRequired,\n      style: N.object\n    })),\n    colors: k.isRequired,\n    enableArea: N.bool.isRequired,\n    areaOpacity: N.number.isRequired,\n    areaBlendMode: h.isRequired,\n    areaBaselineValue: N.oneOfType([N.number, N.string, N.instanceOf(Date)]).isRequired,\n    lineWidth: N.number.isRequired,\n    legends: N.arrayOf(N.shape(F)).isRequired,\n    isInteractive: N.bool.isRequired,\n    debugMesh: N.bool.isRequired,\n    tooltip: N.oneOfType([N.func, N.object]).isRequired,\n    enableSlices: N.oneOf([\"x\", \"y\", !1]).isRequired,\n    debugSlices: N.bool.isRequired,\n    sliceTooltip: N.oneOfType([N.func, N.object]).isRequired,\n    enableCrosshair: N.bool.isRequired,\n    crosshairType: N.string.isRequired\n  },\n  ue = re({}, le, {\n    enablePointLabel: N.bool.isRequired,\n    role: N.string.isRequired,\n    useMesh: N.bool.isRequired,\n    enableTouchCrosshair: N.bool\n  }, f, p),\n  de = re({\n    pixelRatio: N.number.isRequired\n  }, le),\n  ce = {\n    curve: \"linear\",\n    xScale: {\n      type: \"point\"\n    },\n    yScale: {\n      type: \"linear\",\n      min: 0,\n      max: \"auto\"\n    },\n    layers: [\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"points\", \"slices\", \"mesh\", \"legends\"],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !0,\n    enableGridY: !0,\n    enablePoints: !0,\n    pointSize: 6,\n    pointColor: {\n      from: \"color\"\n    },\n    pointBorderWidth: 0,\n    pointBorderColor: {\n      theme: \"background\"\n    },\n    enablePointLabel: !1,\n    pointLabel: \"yFormatted\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    enableArea: !1,\n    areaBaselineValue: 0,\n    areaOpacity: .2,\n    areaBlendMode: \"normal\",\n    lineWidth: 2,\n    legends: [],\n    isInteractive: !0,\n    tooltip: te,\n    enableSlices: !1,\n    debugSlices: !1,\n    sliceTooltip: se,\n    debugMesh: !1,\n    enableCrosshair: !0,\n    crosshairType: \"bottom-left\"\n  },\n  he = re({}, ce, {\n    enablePointLabel: !1,\n    useMesh: !1,\n    enableTouchCrosshair: !1,\n    animate: !0,\n    motionConfig: \"gentle\",\n    defs: [],\n    fill: [],\n    role: \"img\"\n  }),\n  fe = re({}, ce, {\n    pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n  }),\n  pe = function (e) {\n    var o = e.curve;\n    return i(function () {\n      return H().defined(function (e) {\n        return null !== e.x && null !== e.y;\n      }).x(function (e) {\n        return e.x;\n      }).y(function (e) {\n        return e.y;\n      }).curve(v(o));\n    }, [o]);\n  },\n  ve = function (e) {\n    var o = e.curve,\n      r = e.yScale,\n      n = e.areaBaselineValue;\n    return i(function () {\n      return J().defined(function (e) {\n        return null !== e.x && null !== e.y;\n      }).x(function (e) {\n        return e.x;\n      }).y1(function (e) {\n        return e.y;\n      }).curve(v(o)).y0(r(n));\n    }, [o, r, n]);\n  },\n  ye = function (e) {\n    var o = e.componentId,\n      r = e.enableSlices,\n      n = e.points,\n      t = e.width,\n      a = e.height;\n    return i(function () {\n      if (!1 === r) return [];\n      if (\"x\" === r) {\n        var e = new Map();\n        return n.forEach(function (i) {\n          null !== i.data.x && null !== i.data.y && (e.has(i.x) ? e.get(i.x).push(i) : e.set(i.x, [i]));\n        }), Array.from(e.entries()).sort(function (e, i) {\n          return e[0] - i[0];\n        }).map(function (e, i, r) {\n          var n,\n            s,\n            l = e[0],\n            u = e[1],\n            d = r[i - 1],\n            c = r[i + 1];\n          return n = d ? l - (l - d[0]) / 2 : l, s = c ? l - n + (c[0] - l) / 2 : t - n, {\n            id: \"slice\" + o + l,\n            x0: n,\n            x: l,\n            y0: 0,\n            y: 0,\n            width: s,\n            height: a,\n            points: u.reverse()\n          };\n        });\n      }\n      if (\"y\" === r) {\n        var i = new Map();\n        return n.forEach(function (e) {\n          null !== e.data.x && null !== e.data.y && (i.has(e.y) ? i.get(e.y).push(e) : i.set(e.y, [e]));\n        }), Array.from(i.entries()).sort(function (e, i) {\n          return e[0] - i[0];\n        }).map(function (e, i, o) {\n          var r,\n            n,\n            s = e[0],\n            l = e[1],\n            u = o[i - 1],\n            d = o[i + 1];\n          return r = u ? s - (s - u[0]) / 2 : s, n = d ? s - r + (d[0] - s) / 2 : a - r, {\n            id: s,\n            x0: 0,\n            x: 0,\n            y0: r,\n            y: s,\n            width: t,\n            height: n,\n            points: l.reverse()\n          };\n        });\n      }\n    }, [o, r, a, n, t]);\n  },\n  be = function (e) {\n    var t = e.data,\n      a = e.xScale,\n      s = void 0 === a ? he.xScale : a,\n      l = e.xFormat,\n      u = e.yScale,\n      c = void 0 === u ? he.yScale : u,\n      h = e.yFormat,\n      f = e.width,\n      p = e.height,\n      v = e.colors,\n      b = void 0 === v ? he.colors : v,\n      m = e.curve,\n      g = void 0 === m ? he.curve : m,\n      x = e.areaBaselineValue,\n      R = void 0 === x ? he.areaBaselineValue : x,\n      T = e.pointColor,\n      q = void 0 === T ? he.pointColor : T,\n      M = e.pointBorderColor,\n      O = void 0 === M ? he.pointBorderColor : M,\n      S = e.enableSlices,\n      C = void 0 === S ? he.enableSlicesTooltip : S,\n      w = o(),\n      k = y(l),\n      L = y(h),\n      W = B(b, \"id\"),\n      G = d(),\n      P = E(q, G),\n      j = E(O, G),\n      F = r([]),\n      V = F[0],\n      Y = F[1],\n      D = i(function () {\n        return K(t.filter(function (e) {\n          return -1 === V.indexOf(e.id);\n        }), s, c, f, p);\n      }, [t, V, s, c, f, p]),\n      X = D.xScale,\n      A = D.yScale,\n      I = D.series,\n      z = i(function () {\n        var e = t.map(function (e) {\n            return {\n              id: e.id,\n              label: e.id,\n              color: W(e)\n            };\n          }),\n          i = e.map(function (e) {\n            return re({}, I.find(function (i) {\n              return i.id === e.id;\n            }), {\n              color: e.color\n            });\n          }).filter(function (e) {\n            return Boolean(e.id);\n          });\n        return {\n          legendData: e.map(function (e) {\n            return re({}, e, {\n              hidden: !i.find(function (i) {\n                return i.id === e.id;\n              })\n            });\n          }).reverse(),\n          series: i\n        };\n      }, [t, I, W]),\n      H = z.legendData,\n      J = z.series,\n      N = n(function (e) {\n        Y(function (i) {\n          return i.indexOf(e) > -1 ? i.filter(function (i) {\n            return i !== e;\n          }) : [].concat(i, [e]);\n        });\n      }, []),\n      Q = function (e) {\n        var o = e.series,\n          r = e.getPointColor,\n          n = e.getPointBorderColor,\n          t = e.formatX,\n          a = e.formatY;\n        return i(function () {\n          return o.reduce(function (e, i) {\n            return [].concat(e, i.data.filter(function (e) {\n              return null !== e.position.x && null !== e.position.y;\n            }).map(function (o, s) {\n              var l = {\n                id: i.id + \".\" + s,\n                index: e.length + s,\n                serieId: i.id,\n                serieColor: i.color,\n                x: o.position.x,\n                y: o.position.y\n              };\n              return l.color = r(i), l.borderColor = n(l), l.data = re({}, o.data, {\n                xFormatted: t(o.data.x),\n                yFormatted: a(o.data.y)\n              }), l;\n            }));\n          }, []);\n        }, [o, r, n, t, a]);\n      }({\n        series: J,\n        getPointColor: P,\n        getPointBorderColor: j,\n        formatX: k,\n        formatY: L\n      }),\n      U = ye({\n        componentId: w,\n        enableSlices: C,\n        points: Q,\n        width: f,\n        height: p\n      });\n    return {\n      legendData: H,\n      toggleSerie: N,\n      lineGenerator: pe({\n        curve: g\n      }),\n      areaGenerator: ve({\n        curve: g,\n        yScale: A,\n        areaBaselineValue: R\n      }),\n      getColor: W,\n      series: J,\n      xScale: X,\n      yScale: A,\n      slices: U,\n      points: Q\n    };\n  },\n  me = function (e) {\n    var i = e.areaBlendMode,\n      o = e.areaOpacity,\n      r = e.color,\n      n = e.fill,\n      t = e.path,\n      a = b(),\n      s = a.animate,\n      l = a.config,\n      u = m(t),\n      d = Z({\n        color: r,\n        config: l,\n        immediate: !s\n      });\n    return Q($.path, {\n      d: u,\n      fill: n || d.color,\n      fillOpacity: o,\n      strokeWidth: 0,\n      style: {\n        mixBlendMode: i\n      }\n    });\n  };\nme.propTypes = {\n  areaBlendMode: h.isRequired,\n  areaOpacity: N.number.isRequired,\n  color: N.string,\n  fill: N.string,\n  path: N.string.isRequired\n};\nvar ge = function (e) {\n  var i = e.areaGenerator,\n    o = e.areaOpacity,\n    r = e.areaBlendMode,\n    n = e.lines.slice(0).reverse();\n  return Q(\"g\", {\n    children: n.map(function (e) {\n      return Q(me, re({\n        path: i(e.data.map(function (e) {\n          return e.position;\n        }))\n      }, re({\n        areaOpacity: o,\n        areaBlendMode: r\n      }, e)), e.id);\n    })\n  });\n};\nge.propTypes = {\n  areaGenerator: N.func.isRequired,\n  areaOpacity: N.number.isRequired,\n  areaBlendMode: h.isRequired,\n  lines: N.arrayOf(N.object).isRequired\n};\nvar xe = e(ge),\n  Re = function (e) {\n    var o = e.lineGenerator,\n      r = e.points,\n      n = e.color,\n      t = e.thickness,\n      a = i(function () {\n        return o(r);\n      }, [o, r]),\n      s = m(a);\n    return Q($.path, {\n      d: s,\n      fill: \"none\",\n      strokeWidth: t,\n      stroke: n\n    });\n  };\nRe.propTypes = {\n  points: N.arrayOf(N.shape({\n    x: N.oneOfType([N.string, N.number]),\n    y: N.oneOfType([N.string, N.number])\n  })),\n  lineGenerator: N.func.isRequired,\n  color: N.string.isRequired,\n  thickness: N.number.isRequired\n};\nvar Te = e(Re),\n  qe = function (e) {\n    var i = e.lines,\n      o = e.lineGenerator,\n      r = e.lineWidth;\n    return i.slice(0).reverse().map(function (e) {\n      var i = e.id,\n        n = e.data,\n        t = e.color;\n      return Q(Te, {\n        id: i,\n        points: n.map(function (e) {\n          return e.position;\n        }),\n        lineGenerator: o,\n        color: t,\n        thickness: r\n      }, i);\n    });\n  };\nqe.propTypes = {\n  lines: N.arrayOf(N.shape({\n    id: N.oneOfType([N.string, N.number]).isRequired,\n    color: N.string.isRequired,\n    data: N.arrayOf(N.shape({\n      data: N.shape({\n        x: N.oneOfType([N.string, N.number, N.instanceOf(Date)]),\n        y: N.oneOfType([N.string, N.number, N.instanceOf(Date)])\n      }).isRequired,\n      position: N.shape({\n        x: N.number,\n        y: N.number\n      }).isRequired\n    })).isRequired\n  })).isRequired,\n  lineWidth: N.number.isRequired,\n  lineGenerator: N.func.isRequired\n};\nvar Me = e(qe),\n  Oe = function (e) {\n    var i = e.slice,\n      o = e.slices,\n      r = e.axis,\n      a = e.debug,\n      s = e.tooltip,\n      l = e.isCurrent,\n      u = e.setCurrent,\n      d = e.onMouseEnter,\n      c = e.onMouseMove,\n      h = e.onMouseLeave,\n      f = e.onClick,\n      p = e.onTouchStart,\n      v = e.onTouchMove,\n      y = e.onTouchEnd,\n      b = I(),\n      m = b.showTooltipFromEvent,\n      g = b.hideTooltip,\n      x = n(function (e) {\n        m(t(s, {\n          slice: i,\n          axis: r\n        }), e, \"right\"), u(i), d && d(i, e);\n      }, [m, s, i, r, u, d]),\n      R = n(function (e) {\n        m(t(s, {\n          slice: i,\n          axis: r\n        }), e, \"right\"), c && c(i, e);\n      }, [m, s, i, r, c]),\n      T = n(function (e) {\n        g(), u(null), h && h(i, e);\n      }, [g, u, h, i]),\n      q = n(function (e) {\n        f && f(i, e);\n      }, [i, f]),\n      M = n(function (e) {\n        m(t(s, {\n          slice: i,\n          axis: r\n        }), e, \"right\"), u(i), p && p(i, e);\n      }, [r, p, u, m, i, s]),\n      O = n(function (e) {\n        var n = e.touches[0],\n          a = document.elementFromPoint(n.clientX, n.clientY),\n          l = null == a ? void 0 : a.getAttribute(\"data-ref\");\n        if (l) {\n          var d = o.find(function (e) {\n            return e.id === l;\n          });\n          d && (m(t(s, {\n            slice: d,\n            axis: r\n          }), e, \"right\"), u(d));\n        }\n        v && v(i, e);\n      }, [r, v, u, m, i, o, s]),\n      S = n(function (e) {\n        g(), u(null), y && y(i, e);\n      }, [g, u, y, i]);\n    return Q(\"rect\", {\n      x: i.x0,\n      y: i.y0,\n      width: i.width,\n      height: i.height,\n      stroke: \"red\",\n      strokeWidth: a ? 1 : 0,\n      strokeOpacity: .75,\n      fill: \"red\",\n      fillOpacity: l && a ? .35 : 0,\n      onMouseEnter: x,\n      onMouseMove: R,\n      onMouseLeave: T,\n      onClick: q,\n      onTouchStart: M,\n      onTouchMove: O,\n      onTouchEnd: S,\n      \"data-ref\": i.id\n    });\n  };\nOe.propTypes = {\n  slice: N.object.isRequired,\n  slices: N.arrayOf(N.object).isRequired,\n  axis: N.oneOf([\"x\", \"y\"]).isRequired,\n  debug: N.bool.isRequired,\n  height: N.number.isRequired,\n  tooltip: N.oneOfType([N.func, N.object]),\n  isCurrent: N.bool.isRequired,\n  setCurrent: N.func.isRequired,\n  onMouseEnter: N.func,\n  onMouseMove: N.func,\n  onMouseLeave: N.func,\n  onClick: N.func\n};\nvar Se = e(Oe),\n  Ce = function (e) {\n    var i = e.slices,\n      o = e.axis,\n      r = e.debug,\n      n = e.height,\n      t = e.tooltip,\n      a = e.current,\n      s = e.setCurrent,\n      l = e.onMouseEnter,\n      u = e.onMouseMove,\n      d = e.onMouseLeave,\n      c = e.onClick,\n      h = e.onTouchStart,\n      f = e.onTouchMove,\n      p = e.onTouchEnd;\n    return i.map(function (e) {\n      return Q(Se, {\n        slice: e,\n        slices: i,\n        axis: o,\n        debug: r,\n        height: n,\n        tooltip: t,\n        setCurrent: s,\n        isCurrent: null !== a && a.id === e.id,\n        onMouseEnter: l,\n        onMouseMove: u,\n        onMouseLeave: d,\n        onClick: c,\n        onTouchStart: h,\n        onTouchMove: f,\n        onTouchEnd: p\n      }, e.id);\n    });\n  };\nCe.propTypes = {\n  slices: N.arrayOf(N.shape({\n    id: N.oneOfType([N.number, N.string, N.instanceOf(Date)]).isRequired,\n    x: N.number.isRequired,\n    y: N.number.isRequired,\n    points: N.arrayOf(N.object).isRequired\n  })).isRequired,\n  axis: N.oneOf([\"x\", \"y\"]).isRequired,\n  debug: N.bool.isRequired,\n  height: N.number.isRequired,\n  tooltip: N.oneOfType([N.func, N.object]).isRequired,\n  current: N.object,\n  setCurrent: N.func.isRequired,\n  onMouseEnter: N.func,\n  onMouseMove: N.func,\n  onMouseLeave: N.func,\n  onClick: N.func,\n  onTouchStart: N.func,\n  onTouchMove: N.func,\n  onTouchEnd: N.func\n};\nvar we = e(Ce),\n  ke = function (e) {\n    var i = e.points,\n      o = e.symbol,\n      r = e.size,\n      n = e.borderWidth,\n      t = e.enableLabel,\n      a = e.label,\n      s = e.labelYOffset,\n      l = d(),\n      u = g(a),\n      c = i.slice(0).reverse().map(function (e) {\n        return {\n          id: e.id,\n          x: e.x,\n          y: e.y,\n          datum: e.data,\n          fill: e.color,\n          stroke: e.borderColor,\n          label: t ? u(e.data) : null\n        };\n      });\n    return Q(\"g\", {\n      children: c.map(function (e) {\n        return Q(x, {\n          x: e.x,\n          y: e.y,\n          datum: e.datum,\n          symbol: o,\n          size: r,\n          color: e.fill,\n          borderWidth: n,\n          borderColor: e.stroke,\n          label: e.label,\n          labelYOffset: s,\n          theme: l\n        }, e.id);\n      })\n    });\n  };\nke.propTypes = {\n  points: N.arrayOf(N.object),\n  symbol: N.func,\n  size: N.number.isRequired,\n  color: N.func.isRequired,\n  borderWidth: N.number.isRequired,\n  borderColor: N.func.isRequired,\n  enableLabel: N.bool.isRequired,\n  label: N.oneOfType([N.string, N.func]).isRequired,\n  labelYOffset: N.number\n};\nvar Be = e(ke),\n  Ee = function (e) {\n    var i = e.points,\n      o = e.width,\n      r = e.height,\n      a = e.margin,\n      s = e.setCurrent,\n      l = e.onMouseEnter,\n      u = e.onMouseMove,\n      d = e.onMouseLeave,\n      c = e.onClick,\n      h = e.onTouchStart,\n      f = e.onTouchMove,\n      p = e.onTouchEnd,\n      v = e.tooltip,\n      y = e.debug,\n      b = e.enableTouchCrosshair,\n      m = I(),\n      g = m.showTooltipAt,\n      x = m.hideTooltip,\n      R = n(function (e, i) {\n        g(t(v, {\n          point: e\n        }), [e.x + a.left, e.y + a.top], \"top\"), s(e), l && l(e, i);\n      }, [s, g, v, l, a]),\n      T = n(function (e, i) {\n        g(t(v, {\n          point: e\n        }), [e.x + a.left, e.y + a.top], \"top\"), s(e), u && u(e, i);\n      }, [g, v, a.left, a.top, s, u]),\n      q = n(function (e, i) {\n        x(), s(null), d && d(e, i);\n      }, [x, s, d]),\n      M = n(function (e, i) {\n        c && c(e, i);\n      }, [c]),\n      O = n(function (e, i) {\n        g(t(v, {\n          point: e\n        }), [e.x + a.left, e.y + a.top], \"top\"), s(e), h && h(e, i);\n      }, [a.left, a.top, h, s, g, v]),\n      S = n(function (e, i) {\n        g(t(v, {\n          point: e\n        }), [e.x + a.left, e.y + a.top], \"top\"), s(e), f && f(e, i);\n      }, [a.left, a.top, f, s, g, v]),\n      C = n(function (e, i) {\n        x(), s(null), p && p(e, i);\n      }, [p, x, s]);\n    return Q(_, {\n      nodes: i,\n      width: o,\n      height: r,\n      onMouseEnter: R,\n      onMouseMove: T,\n      onMouseLeave: q,\n      onClick: M,\n      onTouchStart: O,\n      onTouchMove: S,\n      onTouchEnd: C,\n      enableTouchCrosshair: b,\n      debug: y\n    });\n  };\nEe.propTypes = {\n  points: N.arrayOf(N.object).isRequired,\n  width: N.number.isRequired,\n  height: N.number.isRequired,\n  margin: N.object.isRequired,\n  setCurrent: N.func.isRequired,\n  onMouseEnter: N.func,\n  onMouseMove: N.func,\n  onMouseLeave: N.func,\n  onClick: N.func,\n  onTouchStart: N.func,\n  onTouchMove: N.func,\n  onTouchEnd: N.func,\n  tooltip: N.oneOfType([N.func, N.object]).isRequired,\n  debug: N.bool.isRequired\n};\nvar Le = e(Ee),\n  We = function (e) {\n    var i = e.data,\n      o = e.xScale,\n      n = void 0 === o ? {\n        type: \"point\"\n      } : o,\n      t = e.xFormat,\n      s = e.yScale,\n      l = void 0 === s ? {\n        type: \"linear\",\n        min: 0,\n        max: \"auto\"\n      } : s,\n      u = e.yFormat,\n      c = e.layers,\n      h = void 0 === c ? [\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"points\", \"slices\", \"mesh\", \"legends\"] : c,\n      f = e.curve,\n      p = void 0 === f ? \"linear\" : f,\n      v = e.areaBaselineValue,\n      y = void 0 === v ? 0 : v,\n      b = e.colors,\n      m = void 0 === b ? {\n        scheme: \"nivo\"\n      } : b,\n      g = e.margin,\n      x = e.width,\n      R = e.height,\n      S = e.axisTop,\n      C = e.axisRight,\n      w = e.axisBottom,\n      k = void 0 === w ? {} : w,\n      B = e.axisLeft,\n      L = void 0 === B ? {} : B,\n      P = e.enableGridX,\n      j = void 0 === P || P,\n      F = e.enableGridY,\n      Y = void 0 === F || F,\n      D = e.gridXValues,\n      X = e.gridYValues,\n      A = e.lineWidth,\n      I = void 0 === A ? 2 : A,\n      H = e.enableArea,\n      J = void 0 !== H && H,\n      K = e.areaOpacity,\n      N = void 0 === K ? .2 : K,\n      U = e.areaBlendMode,\n      Z = void 0 === U ? \"normal\" : U,\n      $ = e.enablePoints,\n      _ = void 0 === $ || $,\n      ee = e.pointSymbol,\n      ie = e.pointSize,\n      oe = void 0 === ie ? 6 : ie,\n      ne = e.pointColor,\n      ae = void 0 === ne ? {\n        from: \"color\"\n      } : ne,\n      le = e.pointBorderWidth,\n      ue = void 0 === le ? 0 : le,\n      de = e.pointBorderColor,\n      ce = void 0 === de ? {\n        theme: \"background\"\n      } : de,\n      he = e.enablePointLabel,\n      fe = void 0 !== he && he,\n      pe = e.pointLabel,\n      ve = void 0 === pe ? \"yFormatted\" : pe,\n      ye = e.pointLabelYOffset,\n      me = e.defs,\n      ge = void 0 === me ? [] : me,\n      Re = e.fill,\n      Te = void 0 === Re ? [] : Re,\n      qe = e.markers,\n      Oe = e.legends,\n      Se = void 0 === Oe ? [] : Oe,\n      Ce = e.isInteractive,\n      ke = void 0 === Ce || Ce,\n      Ee = e.useMesh,\n      We = void 0 !== Ee && Ee,\n      Ge = e.debugMesh,\n      Pe = void 0 !== Ge && Ge,\n      je = e.onMouseEnter,\n      Fe = e.onMouseMove,\n      Ve = e.onMouseLeave,\n      Ye = e.onClick,\n      De = e.onTouchStart,\n      Xe = e.onTouchMove,\n      Ae = e.onTouchEnd,\n      Ie = e.tooltip,\n      ze = void 0 === Ie ? te : Ie,\n      He = e.enableSlices,\n      Je = void 0 !== He && He,\n      Ke = e.debugSlices,\n      Ne = void 0 !== Ke && Ke,\n      Qe = e.sliceTooltip,\n      Ue = void 0 === Qe ? se : Qe,\n      Ze = e.enableCrosshair,\n      $e = void 0 === Ze || Ze,\n      _e = e.crosshairType,\n      ei = void 0 === _e ? \"bottom-left\" : _e,\n      ii = e.enableTouchCrosshair,\n      oi = void 0 !== ii && ii,\n      ri = e.role,\n      ni = void 0 === ri ? \"img\" : ri,\n      ti = T(x, R, g),\n      ai = ti.margin,\n      si = ti.innerWidth,\n      li = ti.innerHeight,\n      ui = ti.outerWidth,\n      di = ti.outerHeight,\n      ci = be({\n        data: i,\n        xScale: n,\n        xFormat: t,\n        yScale: l,\n        yFormat: u,\n        width: si,\n        height: li,\n        colors: m,\n        curve: p,\n        areaBaselineValue: y,\n        pointColor: ae,\n        pointBorderColor: ce,\n        enableSlices: Je\n      }),\n      hi = ci.legendData,\n      fi = ci.toggleSerie,\n      pi = ci.lineGenerator,\n      vi = ci.areaGenerator,\n      yi = ci.series,\n      bi = ci.xScale,\n      mi = ci.yScale,\n      gi = ci.slices,\n      xi = ci.points,\n      Ri = d(),\n      Ti = E(ae, Ri),\n      qi = E(ce, Ri),\n      Mi = r(null),\n      Oi = Mi[0],\n      Si = Mi[1],\n      Ci = r(null),\n      wi = Ci[0],\n      ki = Ci[1],\n      Bi = {\n        grid: Q(W, {\n          theme: Ri,\n          width: si,\n          height: li,\n          xScale: j ? bi : null,\n          yScale: Y ? mi : null,\n          xValues: D,\n          yValues: X\n        }, \"grid\"),\n        markers: Q(q, {\n          markers: qe,\n          width: si,\n          height: li,\n          xScale: bi,\n          yScale: mi,\n          theme: Ri\n        }, \"markers\"),\n        axes: Q(G, {\n          xScale: bi,\n          yScale: mi,\n          width: si,\n          height: li,\n          theme: Ri,\n          top: S,\n          right: C,\n          bottom: k,\n          left: L\n        }, \"axes\"),\n        areas: null,\n        lines: Q(Me, {\n          lines: yi,\n          lineGenerator: pi,\n          lineWidth: I\n        }, \"lines\"),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: Se.map(function (e, i) {\n          return Q(V, re({}, e, {\n            containerWidth: si,\n            containerHeight: li,\n            data: e.data || hi,\n            theme: Ri,\n            toggleSerie: e.toggleSerie ? fi : void 0\n          }), \"legend.\" + i);\n        })\n      },\n      Ei = M(ge, yi, Te);\n    return J && (Bi.areas = Q(xe, {\n      areaGenerator: vi,\n      areaOpacity: N,\n      areaBlendMode: Z,\n      lines: yi\n    }, \"areas\")), ke && !1 !== Je && (Bi.slices = Q(we, {\n      slices: gi,\n      axis: Je,\n      debug: Ne,\n      height: li,\n      tooltip: Ue,\n      current: wi,\n      setCurrent: ki,\n      onMouseEnter: je,\n      onMouseMove: Fe,\n      onMouseLeave: Ve,\n      onClick: Ye,\n      onTouchStart: De,\n      onTouchMove: Xe,\n      onTouchEnd: Ae\n    }, \"slices\")), _ && (Bi.points = Q(Be, {\n      points: xi,\n      symbol: ee,\n      size: oe,\n      color: Ti,\n      borderWidth: ue,\n      borderColor: qi,\n      enableLabel: fe,\n      label: ve,\n      labelYOffset: ye\n    }, \"points\")), ke && $e && (null !== Oi && (Bi.crosshair = Q(z, {\n      width: si,\n      height: li,\n      x: Oi.x,\n      y: Oi.y,\n      type: ei\n    }, \"crosshair\")), null !== wi && (Bi.crosshair = Q(z, {\n      width: si,\n      height: li,\n      x: wi.x,\n      y: wi.y,\n      type: Je\n    }, \"crosshair\"))), ke && We && !1 === Je && (Bi.mesh = Q(Le, {\n      points: xi,\n      width: si,\n      height: li,\n      margin: ai,\n      current: Oi,\n      setCurrent: Si,\n      onMouseEnter: je,\n      onMouseMove: Fe,\n      onMouseLeave: Ve,\n      onClick: Ye,\n      onTouchStart: De,\n      onTouchMove: Xe,\n      onTouchEnd: Ae,\n      tooltip: ze,\n      enableTouchCrosshair: oi,\n      debug: Pe\n    }, \"mesh\")), Q(O, {\n      defs: Ei,\n      width: ui,\n      height: di,\n      margin: ai,\n      role: ni,\n      children: h.map(function (i, o) {\n        return \"function\" == typeof i ? Q(a, {\n          children: i(re({}, e, {\n            innerWidth: si,\n            innerHeight: li,\n            series: yi,\n            slices: gi,\n            points: xi,\n            xScale: bi,\n            yScale: mi,\n            lineGenerator: pi,\n            areaGenerator: vi,\n            currentPoint: Oi,\n            setCurrentPoint: Si,\n            currentSlice: wi,\n            setCurrentSlice: ki\n          }))\n        }, o) : Bi[i];\n      })\n    });\n  };\nWe.propTypes = ue;\nvar Ge = R(We),\n  Pe = function (e) {\n    return Q(S, {\n      children: function (i) {\n        var o = i.width,\n          r = i.height;\n        return Q(Ge, re({\n          width: o,\n          height: r\n        }, e));\n      }\n    });\n  },\n  je = function (e) {\n    var i = l(null),\n      o = e.width,\n      a = e.height,\n      s = e.margin,\n      c = e.pixelRatio,\n      h = void 0 === c ? \"undefined\" != typeof window && window.devicePixelRatio || 1 : c,\n      f = e.data,\n      p = e.xScale,\n      v = void 0 === p ? {\n        type: \"point\"\n      } : p,\n      y = e.xFormat,\n      b = e.yScale,\n      m = void 0 === b ? {\n        type: \"linear\",\n        min: 0,\n        max: \"auto\"\n      } : b,\n      g = e.yFormat,\n      x = e.curve,\n      R = void 0 === x ? \"linear\" : x,\n      q = e.layers,\n      M = void 0 === q ? [\"grid\", \"markers\", \"axes\", \"areas\", \"crosshair\", \"lines\", \"points\", \"slices\", \"mesh\", \"legends\"] : q,\n      O = e.colors,\n      S = void 0 === O ? {\n        scheme: \"nivo\"\n      } : O,\n      k = e.lineWidth,\n      B = void 0 === k ? 2 : k,\n      E = e.enableArea,\n      L = void 0 !== E && E,\n      W = e.areaBaselineValue,\n      G = void 0 === W ? 0 : W,\n      F = e.areaOpacity,\n      V = void 0 === F ? .2 : F,\n      D = e.enablePoints,\n      X = void 0 === D || D,\n      A = e.pointSize,\n      z = void 0 === A ? 6 : A,\n      H = e.pointColor,\n      J = void 0 === H ? {\n        from: \"color\"\n      } : H,\n      K = e.pointBorderWidth,\n      N = void 0 === K ? 0 : K,\n      U = e.pointBorderColor,\n      Z = void 0 === U ? {\n        theme: \"background\"\n      } : U,\n      $ = e.enableGridX,\n      _ = void 0 === $ || $,\n      ne = e.gridXValues,\n      ae = e.enableGridY,\n      se = void 0 === ae || ae,\n      le = e.gridYValues,\n      ue = e.axisTop,\n      de = e.axisRight,\n      ce = e.axisBottom,\n      he = void 0 === ce ? {} : ce,\n      fe = e.axisLeft,\n      pe = void 0 === fe ? {} : fe,\n      ve = e.legends,\n      ye = void 0 === ve ? [] : ve,\n      me = e.isInteractive,\n      ge = void 0 === me || me,\n      xe = e.debugMesh,\n      Re = void 0 !== xe && xe,\n      Te = e.onMouseLeave,\n      qe = e.onClick,\n      Me = e.tooltip,\n      Oe = void 0 === Me ? te : Me,\n      Se = e.canvasRef,\n      Ce = T(o, a, s),\n      we = Ce.margin,\n      ke = Ce.innerWidth,\n      Be = Ce.innerHeight,\n      Ee = Ce.outerWidth,\n      Le = Ce.outerHeight,\n      We = d(),\n      Ge = r(null),\n      Pe = Ge[0],\n      je = Ge[1],\n      Fe = be({\n        data: f,\n        xScale: v,\n        xFormat: y,\n        yScale: m,\n        yFormat: g,\n        width: ke,\n        height: Be,\n        colors: S,\n        curve: R,\n        areaBaselineValue: G,\n        pointColor: J,\n        pointBorderColor: Z\n      }),\n      Ve = Fe.lineGenerator,\n      Ye = Fe.areaGenerator,\n      De = Fe.series,\n      Xe = Fe.xScale,\n      Ae = Fe.yScale,\n      Ie = Fe.points,\n      ze = ee({\n        points: Ie,\n        width: ke,\n        height: Be,\n        debug: Re\n      }),\n      He = ze.delaunay,\n      Je = ze.voronoi;\n    u(function () {\n      Se && (Se.current = i.current), i.current.width = Ee * h, i.current.height = Le * h;\n      var e = i.current.getContext(\"2d\");\n      e.scale(h, h), e.fillStyle = We.background, e.fillRect(0, 0, Ee, Le), e.translate(we.left, we.top), M.forEach(function (i) {\n        if (\"function\" == typeof i && i({\n          ctx: e,\n          innerWidth: ke,\n          innerHeight: Be,\n          series: De,\n          points: Ie,\n          xScale: Xe,\n          yScale: Ae,\n          lineWidth: B,\n          lineGenerator: Ve,\n          areaGenerator: Ye,\n          currentPoint: Pe,\n          setCurrentPoint: je\n        }), \"grid\" === i && We.grid.line.strokeWidth > 0 && (e.lineWidth = We.grid.line.strokeWidth, e.strokeStyle = We.grid.line.stroke, _ && P(e, {\n          width: ke,\n          height: Be,\n          scale: Xe,\n          axis: \"x\",\n          values: ne\n        }), se && P(e, {\n          width: ke,\n          height: Be,\n          scale: Ae,\n          axis: \"y\",\n          values: le\n        })), \"axes\" === i && j(e, {\n          xScale: Xe,\n          yScale: Ae,\n          width: ke,\n          height: Be,\n          top: ue,\n          right: de,\n          bottom: he,\n          left: pe,\n          theme: We\n        }), \"areas\" === i && !0 === L && (e.save(), e.globalAlpha = V, Ye.context(e), De.forEach(function (i) {\n          e.fillStyle = i.color, e.beginPath(), Ye(i.data.map(function (e) {\n            return e.position;\n          })), e.fill();\n        }), e.restore()), \"lines\" === i && (Ve.context(e), De.forEach(function (i) {\n          e.strokeStyle = i.color, e.lineWidth = B, e.beginPath(), Ve(i.data.map(function (e) {\n            return e.position;\n          })), e.stroke();\n        })), \"points\" === i && !0 === X && z > 0 && Ie.forEach(function (i) {\n          e.fillStyle = i.color, e.beginPath(), e.arc(i.x, i.y, z / 2, 0, 2 * Math.PI), e.fill(), N > 0 && (e.strokeStyle = i.borderColor, e.lineWidth = N, e.stroke());\n        }), \"mesh\" === i && !0 === Re && (ie(e, Je), Pe && oe(e, Je, Pe.index)), \"legends\" === i) {\n          var o = De.map(function (e) {\n            return {\n              id: e.id,\n              label: e.id,\n              color: e.color\n            };\n          }).reverse();\n          ye.forEach(function (i) {\n            Y(e, re({}, i, {\n              data: i.data || o,\n              containerWidth: ke,\n              containerHeight: Be,\n              theme: We\n            }));\n          });\n        }\n      });\n    }, [i, Ee, Le, M, We, Ve, De, Xe, Ae, _, ne, se, le, ue, de, he, pe, ye, Ie, X, z, Pe]);\n    var Ke = n(function (e) {\n        var o = C(i.current, e),\n          r = o[0],\n          n = o[1];\n        if (!w(we.left, we.top, ke, Be, r, n)) return null;\n        var t = He.find(r - we.left, n - we.top);\n        return Ie[t];\n      }, [i, we, ke, Be, He]),\n      Ne = I(),\n      Qe = Ne.showTooltipFromEvent,\n      Ue = Ne.hideTooltip,\n      Ze = n(function (e) {\n        var i = Ke(e);\n        je(i), i ? Qe(t(Oe, {\n          point: i\n        }), e) : Ue();\n      }, [Ke, je, Qe, Ue, Oe]),\n      $e = n(function (e) {\n        Ue(), je(null), Pe && Te && Te(Pe, e);\n      }, [Ue, je, Te]),\n      _e = n(function (e) {\n        if (qe) {\n          var i = Ke(e);\n          i && qe(i, e);\n        }\n      }, [Ke, qe]);\n    return Q(\"canvas\", {\n      ref: i,\n      width: Ee * h,\n      height: Le * h,\n      style: {\n        width: Ee,\n        height: Le,\n        cursor: ge ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: ge ? Ze : void 0,\n      onMouseMove: ge ? Ze : void 0,\n      onMouseLeave: ge ? $e : void 0,\n      onClick: ge ? _e : void 0\n    });\n  };\nje.propTypes = de;\nvar Fe = R(je),\n  Ve = s(function (e, i) {\n    return Q(Fe, re({}, e, {\n      canvasRef: i\n    }));\n  }),\n  Ye = s(function (e, i) {\n    return Q(S, {\n      children: function (o) {\n        var r = o.width,\n          n = o.height;\n        return Q(Ve, re({\n          width: r,\n          height: n\n        }, e, {\n          ref: i\n        }));\n      }\n    });\n  });\nexport { Ge as Line, Ve as LineCanvas, fe as LineCanvasDefaultProps, de as LineCanvasPropTypes, he as LineDefaultProps, ue as LinePropTypes, Pe as ResponsiveLine, Ye as ResponsiveLineCanvas, ve as useAreaGenerator, be as useLine, pe as useLineGenerator, ye as useSlices };","map":{"version":3,"names":["ne","LinePointTooltip","e","i","point","Q","D","id","U","children","data","xFormatted","yFormatted","enableChip","color","serieColor","propTypes","N","object","isRequired","te","ae","SliceTooltip","slice","o","axis","r","d","n","X","rows","points","map","A","style","tooltip","chip","serieId","tableCellValue","oneOf","se","le","arrayOf","shape","oneOfType","string","number","x","instanceOf","Date","y","xScale","xFormat","func","yScale","yFormat","layers","curve","c","axisTop","L","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","colors","k","enableArea","areaOpacity","areaBlendMode","h","areaBaselineValue","lineWidth","legends","F","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","ue","re","role","useMesh","enableTouchCrosshair","f","p","de","pixelRatio","ce","type","min","max","from","theme","scheme","he","animate","motionConfig","defs","fill","fe","window","devicePixelRatio","pe","useLineGenerator","H","defined","v","ve","useAreaGenerator","J","y1","y0","ye","useSlices","componentId","t","width","a","height","Map","forEach","has","get","push","set","Array","entries","sort","s","l","u","x0","reverse","be","useLine","b","m","g","R","T","q","M","O","S","C","enableSlicesTooltip","w","W","B","G","P","E","j","V","Y","K","filter","indexOf","I","series","z","label","find","Boolean","legendData","hidden","concat","getPointColor","getPointBorderColor","formatX","formatY","reduce","position","index","length","borderColor","toggleSerie","lineGenerator","areaGenerator","getColor","slices","me","AreaPath","path","config","Z","immediate","$","fillOpacity","strokeWidth","mixBlendMode","ge","Areas","lines","xe","Re","LinesItem","thickness","stroke","Te","qe","Lines","Me","Oe","SlicesItem","debug","isCurrent","setCurrent","onMouseEnter","onMouseMove","onMouseLeave","onClick","onTouchStart","onTouchMove","onTouchEnd","showTooltipFromEvent","hideTooltip","touches","document","elementFromPoint","clientX","clientY","getAttribute","strokeOpacity","Se","Ce","Slices","current","we","ke","Points","symbol","size","borderWidth","enableLabel","labelYOffset","datum","Be","Ee","Mesh","margin","showTooltipAt","left","top","_","nodes","Le","We","Line","ee","ie","oe","pointLabelYOffset","Ge","Pe","je","Fe","Ve","Ye","De","Xe","Ae","Ie","ze","He","Je","Ke","Ne","Qe","Ue","Ze","$e","_e","ei","ii","oi","ri","ni","ti","ai","si","innerWidth","li","innerHeight","ui","outerWidth","di","outerHeight","ci","hi","fi","pi","vi","yi","bi","mi","gi","xi","Ri","Ti","qi","Mi","Oi","Si","Ci","wi","ki","Bi","grid","xValues","yValues","axes","right","bottom","areas","crosshair","mesh","containerWidth","containerHeight","Ei","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","ResponsiveLine","LineCanvas","canvasRef","delaunay","voronoi","getContext","scale","fillStyle","background","fillRect","translate","ctx","line","strokeStyle","values","save","globalAlpha","context","beginPath","restore","arc","Math","PI","ref","cursor","LineCanvasDefaultProps","LineCanvasPropTypes","LineDefaultProps","LinePropTypes","ResponsiveLineCanvas"],"sources":["D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\PointTooltip.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\SliceTooltip.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\props.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\hooks.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Areas.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\LinesItem.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Lines.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\SlicesItem.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Slices.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Points.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Mesh.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\Line.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\ResponsiveLine.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\LineCanvas.js","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\line\\src\\ResponsiveLineCanvas.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    enableTouchCrosshair: PropTypes.bool,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    enableTouchCrosshair: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState, useId } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ componentId, enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: `slice${componentId}${x}`,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [componentId, enableSlices, height, points, width])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const componentId = useId()\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        componentId,\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({\n    slice,\n    slices,\n    axis,\n    debug,\n    tooltip,\n    isCurrent,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onMouseEnter && onMouseEnter(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, axis, setCurrent, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            onMouseMove && onMouseMove(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, axis, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(slice, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave, slice]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(slice, event)\n        },\n        [slice, onClick]\n    )\n\n    const handeOnTouchStart = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onTouchStart && onTouchStart(slice, event)\n        },\n        [axis, onTouchStart, setCurrent, showTooltipFromEvent, slice, tooltip]\n    )\n\n    const handeOnTouchMove = useCallback(\n        event => {\n            // This event will be locked to the element that was touched originally\n            // We find the element that is currently being \"hovered over\" by getting the element at the touch point\n            const touchPoint = event.touches[0]\n            const touchingElement = document.elementFromPoint(\n                touchPoint.clientX,\n                touchPoint.clientY\n            )\n            // Is this a nivo ref?\n            const touchingSliceId = touchingElement?.getAttribute('data-ref')\n            if (touchingSliceId) {\n                // Is this a slice for this graph?\n                const slice = slices.find(slice => slice.id === touchingSliceId)\n                if (slice) {\n                    showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n                    setCurrent(slice)\n                }\n            }\n\n            // Note here, this will pass the original slice, not the one we found\n            // But this can be found with document.elementFromPoint()\n            onTouchMove && onTouchMove(slice, event)\n        },\n        [axis, onTouchMove, setCurrent, showTooltipFromEvent, slice, slices, tooltip]\n    )\n\n    const handleOnTouchEnd = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onTouchEnd && onTouchEnd(slice, event)\n        },\n        [hideTooltip, setCurrent, onTouchEnd, slice]\n    )\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            onTouchStart={handeOnTouchStart}\n            onTouchMove={handeOnTouchMove}\n            onTouchEnd={handleOnTouchEnd}\n            data-ref={slice.id}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    slices: PropTypes.arrayOf(PropTypes.object).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({\n    slices,\n    axis,\n    debug,\n    height,\n    tooltip,\n    current,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n}) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            slices={slices}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n            onMouseEnter={onMouseEnter}\n            onMouseMove={onMouseMove}\n            onMouseLeave={onMouseLeave}\n            onClick={onClick}\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n            onTouchEnd={onTouchEnd}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    onTouchStart: PropTypes.func,\n    onTouchMove: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points\n        .slice(0)\n        .reverse()\n        .map(point => {\n            const mappedPoint = {\n                id: point.id,\n                x: point.x,\n                y: point.y,\n                datum: point.data,\n                fill: point.color,\n                stroke: point.borderColor,\n                label: enableLabel ? getLabel(point.data) : null,\n            }\n\n            return mappedPoint\n        })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    tooltip,\n    debug,\n    enableTouchCrosshair,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, setCurrent, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    const handleTouchStart = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onTouchStart && onTouchStart(point, event)\n        },\n        [margin.left, margin.top, onTouchStart, setCurrent, showTooltipAt, tooltip]\n    )\n\n    const handleTouchMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onTouchMove && onTouchMove(point, event)\n        },\n        [margin.left, margin.top, onTouchMove, setCurrent, showTooltipAt, tooltip]\n    )\n\n    const handleTouchEnd = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onTouchEnd && onTouchEnd(point, event)\n        },\n        [onTouchEnd, hideTooltip, setCurrent]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n            onTouchEnd={handleTouchEnd}\n            enableTouchCrosshair={enableTouchCrosshair}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    onTouchStart: PropTypes.func,\n    onTouchMove: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec = { type: 'point' },\n        xFormat,\n        yScale: yScaleSpec = {\n            type: 'linear',\n            min: 0,\n            max: 'auto',\n        },\n        yFormat,\n        layers = [\n            'grid',\n            'markers',\n            'axes',\n            'areas',\n            'crosshair',\n            'lines',\n            'points',\n            'slices',\n            'mesh',\n            'legends',\n        ],\n        curve = 'linear',\n        areaBaselineValue = 0,\n\n        colors = { scheme: 'nivo' },\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom = {},\n        axisLeft = {},\n        enableGridX = true,\n        enableGridY = true,\n        gridXValues,\n        gridYValues,\n\n        lineWidth = 2,\n        enableArea = false,\n        areaOpacity = 0.2,\n        areaBlendMode = 'normal',\n\n        enablePoints = true,\n        pointSymbol,\n        pointSize = 6,\n        pointColor = { from: 'color' },\n        pointBorderWidth = 0,\n        pointBorderColor = { theme: 'background' },\n        enablePointLabel = false,\n        pointLabel = 'yFormatted',\n        pointLabelYOffset,\n\n        defs = [],\n        fill = [],\n\n        markers,\n\n        legends = [],\n\n        isInteractive = true,\n\n        useMesh = false,\n        debugMesh = false,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n\n        tooltip = PointTooltip,\n\n        enableSlices = false,\n        debugSlices = false,\n        sliceTooltip = SliceTooltip,\n\n        enableCrosshair = true,\n        crosshairType = 'bottom-left',\n        enableTouchCrosshair = false,\n\n        role = 'img',\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                onTouchEnd={onTouchEnd}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                onTouchEnd={onTouchEnd}\n                tooltip={tooltip}\n                enableTouchCrosshair={enableTouchCrosshair}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes } from './props'\nimport { useLine } from './hooks'\nimport PointTooltip from './PointTooltip'\n\nconst LineCanvas = props => {\n    const canvasEl = useRef(null)\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n\n        data,\n        xScale: xScaleSpec = { type: 'point' },\n        xFormat,\n        yScale: yScaleSpec = {\n            type: 'linear',\n            min: 0,\n            max: 'auto',\n        },\n        yFormat,\n        curve = 'linear',\n\n        layers = [\n            'grid',\n            'markers',\n            'axes',\n            'areas',\n            'crosshair',\n            'lines',\n            'points',\n            'slices',\n            'mesh',\n            'legends',\n        ],\n\n        colors = { scheme: 'nivo' },\n        lineWidth = 2,\n\n        enableArea = false,\n        areaBaselineValue = 0,\n        areaOpacity = 0.2,\n\n        enablePoints = true,\n        pointSize = 6,\n        pointColor = { from: 'color' },\n        pointBorderWidth = 0,\n        pointBorderColor = { theme: 'background' },\n\n        enableGridX = true,\n        gridXValues,\n        enableGridY = true,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom = {},\n        axisLeft = {},\n\n        legends = [],\n\n        isInteractive = true,\n        debugMesh = false,\n        //onMouseEnter,\n        //onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip = PointTooltip,\n        canvasRef,\n    } = props\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}