{"ast":null,"code":"import { useMemo as n, Fragment as o, createElement as e, useRef as i, useState as t, useCallback as r } from \"react\";\nimport { Container as l, useDimensions as u, SvgWrapper as a, ResponsiveWrapper as d, getRelativeCursor as c } from \"@nivo/core\";\nimport { scaleLinear as s } from \"d3-scale\";\nimport { Delaunay as h } from \"d3-delaunay\";\nimport { jsx as f, jsxs as v, Fragment as p } from \"react/jsx-runtime\";\nfunction m() {\n  return m = Object.assign ? Object.assign.bind() : function (n) {\n    for (var o = 1; o < arguments.length; o++) {\n      var e = arguments[o];\n      for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (n[i] = e[i]);\n    }\n    return n;\n  }, m.apply(this, arguments);\n}\nvar y = {\n    xDomain: [0, 1],\n    yDomain: [0, 1],\n    layers: [\"links\", \"cells\", \"points\", \"bounds\"],\n    enableLinks: !1,\n    linkLineWidth: 1,\n    linkLineColor: \"#bbbbbb\",\n    enableCells: !0,\n    cellLineWidth: 2,\n    cellLineColor: \"#000000\",\n    enablePoints: !0,\n    pointSize: 4,\n    pointColor: \"#666666\",\n    role: \"img\"\n  },\n  b = function (n) {\n    return \"function\" == typeof n ? n : function (o) {\n      return o[n];\n    };\n  },\n  g = function (n) {\n    var o = n.points,\n      e = n.x,\n      i = void 0 === e ? \"x\" : e,\n      t = n.y,\n      r = void 0 === t ? \"y\" : t,\n      l = b(i),\n      u = b(r);\n    return o.map(function (n) {\n      return [l(n), u(n)];\n    });\n  },\n  k = function (n) {\n    var o = n.points,\n      e = n.width,\n      i = n.height,\n      t = n.debug,\n      r = h.from(o),\n      l = t ? r.voronoi([0, 0, e, i]) : void 0;\n    return {\n      delaunay: r,\n      voronoi: l\n    };\n  },\n  C = function (o) {\n    var e = o.points,\n      i = o.x,\n      t = o.y,\n      r = o.width,\n      l = o.height,\n      u = o.debug,\n      a = n(function () {\n        return g({\n          points: e,\n          x: i,\n          y: t\n        });\n      }, [e, i, t]);\n    return n(function () {\n      return k({\n        points: a,\n        width: r,\n        height: l,\n        debug: u\n      });\n    }, [a, r, l, u]);\n  },\n  x = function (o) {\n    var e = o.data,\n      i = o.width,\n      t = o.height,\n      r = o.xDomain,\n      l = o.yDomain,\n      u = n(function () {\n        return s().domain(r).range([0, i]);\n      }, [r, i]),\n      a = n(function () {\n        return s().domain(l).range([0, t]);\n      }, [l, t]),\n      d = n(function () {\n        return e.map(function (n) {\n          return {\n            x: u(n.x),\n            y: a(n.y),\n            data: n\n          };\n        });\n      }, [e, u, a]);\n    return n(function () {\n      var n = h.from(d.map(function (n) {\n          return [n.x, n.y];\n        })),\n        o = n.voronoi([0, 0, i, t]);\n      return {\n        points: d,\n        delaunay: n,\n        voronoi: o\n      };\n    }, [d, i, t]);\n  },\n  L = function (o) {\n    var e = o.points,\n      i = o.delaunay,\n      t = o.voronoi;\n    return n(function () {\n      return {\n        points: e,\n        delaunay: i,\n        voronoi: t\n      };\n    }, [e, i, t]);\n  },\n  w = [\"theme\"],\n  W = function (n) {\n    var i = n.data,\n      t = n.width,\n      r = n.height,\n      l = n.margin,\n      d = n.layers,\n      c = void 0 === d ? y.layers : d,\n      s = n.xDomain,\n      h = void 0 === s ? y.xDomain : s,\n      v = n.yDomain,\n      p = void 0 === v ? y.yDomain : v,\n      m = n.enableLinks,\n      b = void 0 === m ? y.enableLinks : m,\n      g = n.linkLineWidth,\n      k = void 0 === g ? y.linkLineWidth : g,\n      C = n.linkLineColor,\n      w = void 0 === C ? y.linkLineColor : C,\n      W = n.enableCells,\n      D = void 0 === W ? y.enableCells : W,\n      M = n.cellLineWidth,\n      S = void 0 === M ? y.cellLineWidth : M,\n      T = n.cellLineColor,\n      O = void 0 === T ? y.cellLineColor : T,\n      P = n.enablePoints,\n      j = void 0 === P ? y.enableCells : P,\n      E = n.pointSize,\n      z = void 0 === E ? y.pointSize : E,\n      A = n.pointColor,\n      H = void 0 === A ? y.pointColor : A,\n      B = n.role,\n      F = void 0 === B ? y.role : B,\n      I = u(t, r, l),\n      q = I.outerWidth,\n      G = I.outerHeight,\n      J = I.margin,\n      K = I.innerWidth,\n      N = I.innerHeight,\n      Q = x({\n        data: i,\n        width: K,\n        height: N,\n        xDomain: h,\n        yDomain: p\n      }),\n      R = Q.points,\n      U = Q.delaunay,\n      V = Q.voronoi,\n      X = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null\n      };\n    b && c.includes(\"links\") && (X.links = f(\"path\", {\n      stroke: w,\n      strokeWidth: k,\n      fill: \"none\",\n      d: U.render()\n    }, \"links\")), D && c.includes(\"cells\") && (X.cells = f(\"path\", {\n      d: V.render(),\n      fill: \"none\",\n      stroke: O,\n      strokeWidth: S\n    }, \"cells\")), j && c.includes(\"points\") && (X.points = f(\"path\", {\n      stroke: \"none\",\n      fill: H,\n      d: U.renderPoints(void 0, z / 2)\n    }, \"points\")), c.includes(\"bounds\") && (X.bounds = f(\"path\", {\n      fill: \"none\",\n      stroke: O,\n      strokeWidth: S,\n      d: V.renderBounds()\n    }, \"bounds\"));\n    var Y = L({\n      points: R,\n      delaunay: U,\n      voronoi: V\n    });\n    return f(a, {\n      width: q,\n      height: G,\n      margin: J,\n      role: F,\n      children: c.map(function (n, i) {\n        return void 0 !== X[n] ? X[n] : \"function\" == typeof n ? f(o, {\n          children: e(n, Y)\n        }, i) : null;\n      })\n    });\n  },\n  D = function (n) {\n    var o = n.theme,\n      e = function (n, o) {\n        if (null == n) return {};\n        var e,\n          i,\n          t = {},\n          r = Object.keys(n);\n        for (i = 0; i < r.length; i++) e = r[i], o.indexOf(e) >= 0 || (t[e] = n[e]);\n        return t;\n      }(n, w);\n    return f(l, {\n      isInteractive: !1,\n      animate: !1,\n      theme: o,\n      children: f(W, m({}, e))\n    });\n  },\n  M = function (n) {\n    return f(d, {\n      children: function (o) {\n        var e = o.width,\n          i = o.height;\n        return f(D, m({\n          width: e,\n          height: i\n        }, n));\n      }\n    });\n  },\n  S = function (o) {\n    var e = o.nodes,\n      l = o.width,\n      u = o.height,\n      a = o.x,\n      d = o.y,\n      s = o.onMouseEnter,\n      h = o.onMouseMove,\n      m = o.onMouseLeave,\n      y = o.onClick,\n      b = o.onTouchStart,\n      g = o.onTouchMove,\n      k = o.onTouchEnd,\n      x = o.enableTouchCrosshair,\n      L = void 0 !== x && x,\n      w = o.debug,\n      W = i(null),\n      D = t(null),\n      M = D[0],\n      S = D[1],\n      T = C({\n        points: e,\n        x: a,\n        y: d,\n        width: l,\n        height: u,\n        debug: w\n      }),\n      O = T.delaunay,\n      P = T.voronoi,\n      j = n(function () {\n        if (w && P) return P.render();\n      }, [w, P]),\n      E = r(function (n) {\n        if (!W.current) return [null, null];\n        var o = c(W.current, n),\n          i = o[0],\n          t = o[1],\n          r = O.find(i, t);\n        return [r, void 0 !== r ? e[r] : null];\n      }, [O, e]),\n      z = r(function (n) {\n        if (!W.current) return [null, null];\n        var o = c(W.current, n),\n          i = o[0],\n          t = o[1],\n          r = O.find(i, t);\n        return [r, void 0 !== r ? e[r] : null];\n      }, [O, e]),\n      A = r(function (n) {\n        var o = E(n),\n          e = o[0],\n          i = o[1];\n        S(e), i && (null == s || s(i, n));\n      }, [E, S, s]),\n      H = r(function (n) {\n        var o = E(n),\n          e = o[0],\n          i = o[1];\n        S(e), i && (null == h || h(i, n));\n      }, [E, S, h]),\n      B = r(function (n) {\n        if (S(null), m) {\n          var o = void 0;\n          null !== M && (o = e[M]), o && m(o, n);\n        }\n      }, [S, M, m, e]),\n      F = r(function (n) {\n        var o = E(n),\n          e = o[0],\n          i = o[1];\n        S(e), i && (null == y || y(i, n));\n      }, [E, S, y]),\n      I = r(function (n) {\n        var o = z(n),\n          e = o[0],\n          i = o[1];\n        L && S(e), i && (null == b || b(i, n));\n      }, [z, L, b]),\n      q = r(function (n) {\n        var o = z(n),\n          e = o[0],\n          i = o[1];\n        L && S(e), i && (null == g || g(i, n));\n      }, [z, L, g]),\n      G = r(function (n) {\n        if (L && S(null), k) {\n          var o = void 0;\n          null !== M && (o = e[M]), o && k(o, n);\n        }\n      }, [L, k, M, e]);\n    return v(\"g\", {\n      ref: W,\n      children: [w && P && v(p, {\n        children: [f(\"path\", {\n          d: j,\n          stroke: \"red\",\n          strokeWidth: 1,\n          opacity: .75\n        }), null !== M && f(\"path\", {\n          fill: \"pink\",\n          opacity: .35,\n          d: P.renderCell(M)\n        })]\n      }), f(\"rect\", {\n        \"data-ref\": \"mesh-interceptor\",\n        width: l,\n        height: u,\n        fill: \"red\",\n        opacity: 0,\n        style: {\n          cursor: \"auto\"\n        },\n        onMouseEnter: A,\n        onMouseMove: H,\n        onMouseLeave: B,\n        onTouchStart: I,\n        onTouchMove: q,\n        onTouchEnd: G,\n        onClick: F\n      })]\n    });\n  },\n  T = function (n, o) {\n    n.save(), n.globalAlpha = .75, n.beginPath(), o.render(n), n.strokeStyle = \"red\", n.lineWidth = 1, n.stroke(), n.restore();\n  },\n  O = function (n, o, e) {\n    n.save(), n.globalAlpha = .35, n.beginPath(), o.renderCell(e, n), n.fillStyle = \"red\", n.fill(), n.restore();\n  };\nexport { S as Mesh, M as ResponsiveVoronoi, D as Voronoi, k as computeMesh, g as computeMeshPoints, y as defaultVoronoiProps, O as renderVoronoiCellToCanvas, T as renderVoronoiToCanvas, x as useVoronoi, L as useVoronoiLayerContext, C as useVoronoiMesh };","map":{"version":3,"names":["y","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","b","getAccessor","n","o","g","computeMeshPoints","points","e","x","i","t","r","l","u","map","k","computeMesh","width","height","debug","h","from","voronoi","delaunay","C","useVoronoiMesh","a","useVoronoi","data","s","domain","range","d","L","useVoronoiLayerContext","w","W","InnerVoronoi","margin","c","v","p","m","D","M","S","T","O","P","j","E","z","A","H","B","F","I","q","outerWidth","G","outerHeight","J","K","innerWidth","N","innerHeight","Q","R","U","V","X","links","cells","bounds","includes","f","stroke","strokeWidth","fill","render","renderPoints","renderBounds","Y","children","Voronoi","theme","Object","keys","length","indexOf","isInteractive","animate","ResponsiveVoronoi","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","onTouchStart","onTouchMove","onTouchEnd","enableTouchCrosshair","current","find","ref","opacity","renderCell","style","cursor","renderVoronoiToCanvas","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","renderVoronoiCellToCanvas","fillStyle","defaultVoronoiProps"],"sources":["D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\props.ts","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\computeMesh.ts","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\hooks.ts","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\Voronoi.tsx","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\ResponsiveVoronoi.tsx","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\Mesh.tsx","D:\\PROJECTS\\react-admin\\node_modules\\@nivo\\voronoi\\src\\meshCanvas.ts"],"sourcesContent":["import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useRef, useState, useCallback, useMemo, MouseEvent, TouchEvent } from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: MouseEvent) => void\ntype TouchHandler<Datum> = (datum: Datum, event: TouchEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    onTouchStart?: TouchHandler<Datum>\n    onTouchMove?: TouchHandler<Datum>\n    onTouchEnd?: TouchHandler<Datum>\n    enableTouchCrosshair?: boolean\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    enableTouchCrosshair = false,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromMouseEvent = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [delaunay, nodes]\n    )\n\n    const getIndexAndNodeFromTouchEvent = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [delaunay, nodes]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromMouseEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromMouseEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromMouseEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromMouseEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromMouseEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromMouseEvent, setCurrentIndex, onClick]\n    )\n\n    const handleTouchStart = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromTouchEvent(event)\n            if (enableTouchCrosshair) {\n                setCurrentIndex(index)\n            }\n            if (node) {\n                onTouchStart?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromTouchEvent, enableTouchCrosshair, onTouchStart]\n    )\n\n    const handleTouchMove = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromTouchEvent(event)\n            if (enableTouchCrosshair) {\n                setCurrentIndex(index)\n            }\n            if (node) {\n                onTouchMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromTouchEvent, enableTouchCrosshair, onTouchMove]\n    )\n\n    const handleTouchEnd = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            if (enableTouchCrosshair) {\n                setCurrentIndex(null)\n            }\n            if (onTouchEnd) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onTouchEnd(previousNode, event)\n            }\n        },\n        [enableTouchCrosshair, onTouchEnd, currentIndex, nodes]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                data-ref=\"mesh-interceptor\"\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onTouchStart={handleTouchStart}\n                onTouchMove={handleTouchMove}\n                onTouchEnd={handleTouchEnd}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}